<title>play-preview</title>
<meta attribute=src type=string>

<template mode=closed>
	<div id=titlebar>
		<ui-button
			:icon="$.loading ? 'close' : 'repeat'"
			aria-label="Reload"
			@click="$.loading ? $.cancel() : $.go()"
		></ui-button>
		<ui-input
			.class-list.invalid="$.invalid"
			@enter="$.go()"
		></ui-input>
		<ui-button
			icon=close
			aria-label="Close"
			@click="$.close()"
		></ui-button>
	</div>
	<ui-browser .hidden="$.loading"></ui-browser>
	<div id=content .hidden="!$.loading">
		<ui-icon type=spinner></ui-icon>
	</div>
</template>

<script>
const {iframe, uiInput, uiBrowser} = elements

live.link($.$src, uiInput)

$.close = () => this.dispatchEvent(new CustomEvent('close'))
$.cancel = () => uiBrowser.cancel?.()
$.go = async () => {
	await customElements.whenDefined('ui-browser')
	try {
		await uiBrowser.navigate($.src)
	} catch {
		const keyframes = [{backgroundColor: 'var(--error-color)', offset: 0}]
		uiInput.animate(keyframes, {duration: 1000})
		return
	}
	$.src = uiBrowser.status == 'complete'
		? uiBrowser.src.replace(/^https:\/\/(?:www\.)?/, '')
		: uiBrowser.src
	uiBrowser.focus()
	this.dispatchEvent(new CustomEvent('srcchange'))
	if(!$.sameOrigin) return
	uiBrowser.inject(`<link rel=stylesheet href=/-/css/file.css>`)
}

connected(() => {
	console.log($.src)
	if(!$.src) return
	$.go()
})
</script>

<style>
:host {
	display: grid; padding: .75rem; box-sizing: border-box;
	grid: auto 1fr / 1fr; gap: .75rem;
	background-color: var(--background-color);
	border-radius: 1.5rem;
	transition: opacity .2s, scale .2s, visibility 0s 0s;
}
:host([hidden]){
	scale: .95;
	opacity: 0; visibility: hidden;
	transition: opacity .2s, scale .2s, visibility 0s .2s;
}
#titlebar {
	display: flex; padding: 0; margin: 0;
	align-items: center;
	list-style: none;
}
ui-button:hover, ::part(button):hover {
	background-color: var(--highlight-color);
}
ui-input {
	flex: 1 1 0;
	margin: 0 .75rem 0 .5rem;
}
ui-browser, #content {
	place-self: stretch;
	border-radius: 1rem;
	/* clip-path to avoid weird AA in Firefox (didn't test in Chrome) */
	clip-path: inset(0 round 1rem);
}
#content {
	display: grid;
	background-color: var(--sub-background-color);
	place-items: center;
}
ui-browser[hidden], #content[hidden] { display: none; }
</style>
