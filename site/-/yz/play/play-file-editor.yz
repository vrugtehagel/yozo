<title>play-file-editor</title>
<meta attribute=uuid type=string>

<template mode=closed>
	<div id=titlebar>
		<ui-dropdown icon=menu autoclose>
			<ui-button icon=edit @click="elements.uiDisplayName.editing = true"
			>Rename</ui-button>
			<ui-button icon=delete
				@click="$.playManager?.removeFile($.uuid), $.close()">Delete</ui-button>
		</ui-dropdown>
		<ui-display-name prefix=/file/ :value="$.playManager?.file($.uuid).src"
			@rename="$.playManager.file($.uuid).src = event.detail.fullValue"></ui-display-name>
		<ui-button icon=close @click="$.close()"></ui-button>
	</div>
	<ui-code-editor :language="$.webServer?.extension($.playManager?.file($.uuid).src)"
	></ui-code-editor>
</template>

<script>
import('/-/js/play-manager/index.js')
	.then(playManager => $.playManager = playManager)
import('/-/js/web-server/index.js')
	.then(webServer => $.webServer = webServer)

$.close = () => this.dispatchEvent(new CustomEvent('close'))

connected(() => effect(() => {
	if(!$.playManager) return
	if(!$.uuid) return
	const $file = $.playManager.file($.uuid)
	const {uiCodeEditor} = elements
	uiCodeEditor.value = $file.body ?? ''
	live.link($file.$body, uiCodeEditor)
}))
</script>

<style>
:host {
	display: flex; padding: .75rem; box-sizing: border-box;
	flex-direction: column; gap: .75rem;
	background-color: var(--background-color);
	border-radius: 1.5rem;
}
ui-display-name:not([editing]){ padding: 0 0 0 .5rem; }
#titlebar {
	display: flex;
	gap: 1rem;
	& ui-button[icon=close] { margin-left: auto; }
}
::part(dropdown){
	width: 14rem;
	inset: 4.25rem auto auto 0.5rem; z-index: 1;
	box-shadow: none;
}
ui-code-editor {
	flex: 1;
	border-radius: 1rem;
}
</style>
