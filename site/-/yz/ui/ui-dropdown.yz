<title>ui-dropdown</title>
<meta attribute=open type=boolean>
<meta attribute=icon type=string>
<meta attribute=iconstate type=string>
<meta attribute=label type=string>
<meta attribute=autoclose type=boolean>
<meta event=open>
<meta event=close>

<template mode=closed>
	<ui-button part=button :icon="$.icon || null" :iconstate="$.iconstate || null"
		@click="$.open = !$.open"
	>{{ $.label }}</ui-button>
	<div id=menu .hidden="!$.open" part=dropdown tabindex=-1>
		<slot></slot>
	</div>
</template>

<script>
connected(() => {
	let currentEvent
	when(this).clicks().then(event => currentEvent = event)
	when(document).clicks().then(event => {
		if(currentEvent == event) return
		$.open = false
		currentEvent = null
	})
})

effect(() => {
	if(!$.autoclose) return
	when(this).clicks()
		.if(() => !this.matches(':focus'))
		.then(() => $.open = false)
})

when($.$open).changes().then(() => {
	if($.open) this.dispatchEvent(new CustomEvent('open'))
	else this.dispatchEvent(new CustomEvent('close'))
})
</script>

<style>
:host {
	display: inline-block;
	position: relative;
}
ui-button { width: 100%; }
#menu {
	display: flex; padding: .5rem; margin: 0;
	flex-direction: column;
	position: absolute; inset: 4rem auto auto auto;
	background-color: var(--background-color);
	border-radius: 1rem;
	box-shadow: 0 0 20px 3px var(--sub-background-color);
	transition: opacity .2s, translate .2s, visibility 0s 0s;
}
#menu[hidden]{
	translate: var(--appear-from, 0 -.5rem);
	opacity: 0; visibility: hidden;
	transition: opacity .2s, translate .2s, visibility 0s .3s;
}
</style>
