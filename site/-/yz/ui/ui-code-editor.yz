<title>ui-code-editor</title>
<meta attribute=value type=string>
<meta attribute=language type=string default="txt">
<meta attribute=showlinenumbers as=showLineNumbers type=boolean>

<template mode=closed>
	<div id=container .style.tab-size="$.siteSettings?.$settings.tabSize ?? 4">
		<div id=line-numbers>
			<span #for="number of $.numbers">{{ number }}</span>
		</div>
		<textarea spellcheck=false></textarea>
		<ui-syntax-highlight :language="$.language" :value="$.value"></ui-syntax-highlight>
	</div>
</template>

<script>
import('/-/js/site-settings/index.js').then(mod => $.siteSettings = mod)

const container = query('#container')
const textarea = query('textarea')
const uiSyntaxHighlight = query('ui-syntax-highlight')
const lineNumbers = query('#line-numbers')

if($.value) textarea.value = $.value
live.link($.$value, textarea)
live.link($.$numbers, () => {
	if(!$.showLineNumbers) return []
	return $.value.split('\n').map((line, index) => index + 1)
})

connected(async () => {
	const {attach} = await until(import('/-/js/input-keybinds/index.js'))
	effect(() => attach(textarea, $.language))
})

connected(() => {
	when(uiSyntaxHighlight).observes('resize').then(([entry]) => {
		const {width, height} = entry.contentRect
		container.style.setProperty('--width', width)
		container.style.setProperty('--height', height)
	})
})

connected(() => effect(() => {
	if(!$.showLineNumbers) return container.style.setProperty('--left', 0)
	when(lineNumbers).observes('resize').then(([entry]) => {
		const {inlineSize} = entry.borderBoxSize[0]
		container.style.setProperty('--left', Math.floor(inlineSize))
	})
}))
</script>

<style>
:host {
	display: block; padding: 1.5rem 2rem;
	position: relative;
	background: var(--highlight-color);
	font-family: var(--font-monospace);
	overflow: auto; scroll-padding: 1.5rem 2rem;
}
:host([linenumbers]){ padding-left: 1.5rem; }
::selection {
	background-color: color-mix(in hsl, var(--highlight-color), white 20%);
}
#container {
	width: 100%; height: 100%;
	position: relative;
}
#line-numbers {
	padding: 0 1.5rem 0 0;
	position: absolute;
	color: var(--comment-color);
	line-height: 1.5;
	text-align: right;
	& span { display: block; }
}
textarea, ui-syntax-highlight {
	display: block; padding: 0;
	background: none;
	font-size: 1rem; line-height: 1.5; font-family: inherit;
	letter-spacing: 0;
}
textarea {
	width: max(100% - var(--left, 0) * 1px, var(--width) * 1px + 1rem);
	height: max(100%, var(--height) * 1px + 2rem); margin: 0;
	position: absolute; left: calc(var(--left, 0) * 1px);
	color: white; background: transparent;
	border: none; outline: none;
	resize: none;
	caret-color: white;
}
ui-syntax-highlight {
	pointer-events: none;
	position: absolute; inset: 0 auto auto calc(var(--left, 0) * 1px);
	overflow: visible;
}
</style>
