<title>home-setup</title>

<template mode=closed>
	<menu>
		<li><ui-button icon=pointer iconstate=left aria-label="Back"
			@click="$.step--" .hidden="$.step == 0"
		></ui-button></li>
		<li id=step-indicator>
			<ui-button #for="index of [0, 1, 2, 3, 4]"
				icon="progress-indicator" :iconstate="$.stepStatus(index)"
				@click="$.step = index"
			></ui-button>
		</li>
		<li><ui-button icon=pointer iconstate=right aria-label="Next"
			@click="$.step++" .hidden="$.step == 5"
		></ui-button></li>
	</menu>
	<div id=steps>
		<div id=start class="step" .hidden="$.step != 0">
			<h3>Show me!</h3>
			<p>This little interactive widget will show you how easy it is to get Yozo up and running. Who would've thought five babysteps could get you that far!</p>
			<div class="step-actions">
				<ui-button @click="$.step++">Try it!</ui-button>
			</div>
		</div>
		<div id=create-project class="step" .hidden="$.step != 1">
			<h3>Create a new project</h3>
			<p>First, create a new project with just a basic HTML file.</p>
			<p>You can use a real filesystem, or use Yozo's <a href="/play/" target="_blank">playground</a> and start with a blank slate to simulate one.</p>
			<div class="step-actions">
				<ui-button @click="$.copyBoilerplateHTML()"
					.style.background-color="'var(--name-color)'"
				>Copy HTML</ui-button>
				<ui-button @click="$.step++">Next step</ui-button>
			</div>
		</div>
		<div id=add-script-tag class="step" .hidden="$.step != 2">
			<h3>Add Yozo</h3>
			<p>Now, we add Yozo; simply put one of these in the <code>&lt;head&gt;</code> of your page.</p>
			<ui-code language=html>
				&lt;script src="https://yozo.ooo/dev-latest.js"&gt;&lt;/script&gt;
			</ui-code>
			<p>If the <code>window.yozo</code> global is defined, success! Yozo is ready!</p>
			<div class="step-actions">
				<ui-button @click="$.step++">Done!</ui-button>
			</div>
		</div>
		<div id=create-component class="step" .hidden="$.step != 3">
			<h3>Your first component</h3>
		</div>
		<div id=register-component class="step" .hidden="$.step != 4">

		</div>
		<div id=complete class="step" .hidden="$.step != 5">

		</div>
	</div>
</template>
<script>
$.step = 0;
$.stepStatus = index => {
	if($.step < index) return 'none'
	if($.step == index) return 'in-progress'
	return 'completed'
}
$.copyBoilerplateHTML = async () => {
	try {
		// extract and process to user settings
		// also create user feedback
		await navigator.clipboard.writeText(`<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width,initial-scale=1">
	<title>Hello Yozo!</title>
</head>
<body>
	<h1>Hello Yozo!</h1>
</body>
</html>
`);
	} catch (error) {
		console.error(error.message);
	}
}
</script>
<style>
:host {
	grid: auto auto / 1fr;
	gap: 1rem; place-items: stretch;
}
menu {
	list-style: none;
	display: grid; padding: 0; margin: 0;
	grid: auto / auto 1fr auto; gap: 1rem;
}
ui-button[hidden] {
	pointer-events: none;
	opacity: 0; visibility: hidden;
	transition: translate .2s, opacity .2s, visibility .2s 0s;
	&[hidden]{
		opacity: 0; visibility: hidden;
		transition: translate .2s, opacity .2s, visibility .2s .2s;
	}
}
#step-indicator {
	display: flex;
	align-items: center; justify-content: center; gap: 1rem;
	ui-button {
		background-color: var(--sub-background-color);
		border-radius: 50%;
		transition: background-color .2s, color .2s;
		&[iconstate=completed]{
			color: var(--sub-background-color); background-color: var(--primary-color);
		}
	}
}
#steps {
	display: grid;
	grid: 1fr / 1fr;
	background-color: var(--sub-background-color);
	border-radius: 1rem;
}
h3 {
	font-weight: bold;
	font-size: 1.5rem;
	margin: 0 0 1em 0;
}
a {
	color: var(--name-color);
	text-decoration: .1em underline;
	text-underline-offset: .3em;
	transition: text-underline-offset .15s;
	&:hover { text-underline-offset: .2em; }
}
p { margin: 0 0 1rem 0; }
code {
	padding: .125em .5em;
	background-color: var(--background-color);
	border-radius: .5em;
	font-family: var(--font-monospace);
}
ui-code { margin-bottom: 1rem; }

.step {
	grid-area: 1 / 1;
	display: flex; padding: 2rem;
	flex-direction: column;
	transition: translate .2s, opacity .2s, visibility .2s 0s;
	&[hidden]{
		translate: -1rem 0;
		opacity: 0; visibility: hidden;
		transition: translate .2s, opacity .2s, visibility .2s .2s;
	}
	&:not([hidden]) + [hidden]{
		translate: 1rem 0;
	}
}
.step-actions {
	display: flex; padding: 1rem 0 0; margin-top: auto;
	gap: 1rem; justify-content: end;
	ui-button {
		color: var(--sub-background-color); background-color: var(--parameter-color);
		transition: .2s;
		&:hover { opacity: .85; }
	}
}
</style>
