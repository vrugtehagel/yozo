@script
	const cwd = await Deno.cwd()
	const {layoutArgs} = csml.args
	const url = `${cwd}/${csml.args.url}`
	const directory = url.split('/').slice(0, -1).join('/')
	const page = await csml.import(url, layoutArgs)
	const exclude = new Set(page.exclude ?? [])
	const content = page.default
	const isResolved = promise => promise.then(() => true, () => false)
	const hasCSS = await isResolved(Deno.lstat(`${directory}/index.css`))
	const hasJS = await isResolved(Deno.lstat(`${directory}/index.js`))

!DOCTYPE html
html[lang=en]
	meta[charset=utf-8]
	title {{ page.title }} | YOZO

	meta[name=viewport][content="width=device-width,initial-scale=1"]
	meta[name=robots][content="noindex,nofollow"]
	@if(page.description)
		meta[name=description][content={{ page.description }}]

	@if(!exclude.has('yozo'))
		script[src=/lib-latest.js]
	@if(!exclude.has('yozo-register'))
		script
			self.yozo.register.auto(name => {
				const namespace = name.split('-', 1)[0]
				return `/-/yz/${namespace}/${name}.yz`
			})
	style
		@layer base, custom-elements, layout;
	@if(!exclude.has('fonts'))
		link[rel=stylesheet][href=/-/css/fonts.css]
	@if(!exclude.has('global-assets'))
		link[rel=stylesheet][href=/-/css/base.css]
		link[rel=stylesheet][href=/-/css/custom-elements.css]
	@if(hasCSS && !exclude.has('css'))
		link[rel=stylesheet][href=./index.css]
	@if(hasJS && !exclude.has('js'))
		script[type=module][src=./index.js]

	@if(!exclude.has('site-nav'))
		site-nav


	@if(page.layout)
		:html {{ csml.render(`./${page.layout}.csml`, {url, content, page}) }}
	@else
		:html {{ content }}


	@if(!exclude.has('site-footer'))
		site-footer
