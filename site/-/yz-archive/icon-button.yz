<title>icon-button</title>
<meta attribute=type type=String>
<meta attribute=danger type=Boolean>
<meta method=activate>

<template mode=closed delegates-focus=true>
	<button>
		<svg-icon .type="$.type ?? ''"></svg-icon>
		<slot></slot>
	</button>
</template>
<script>

const {button} = elements

$.activate = () => this.dispatchEvent(new CustomEvent('activate'))

effect(() => button.classList.toggle('danger', $.danger))
effect(() => {
	if(!$.danger) return when(button).clicks().then($.activate)
	when(button).pointerdowns().then(() => {
		when(button).transitionends().once()
			.then($.activate)
			.until(when(document).pointerups())
	})
})

</script>
<style>

:host {
	display: inline-block; width: 3rem; height: 3rem;
	color: rgb(255 255 255 / 90%);
}

button {
	width: 100%; height: 100%; margin: 0; padding: .75rem;
	position: relative;
	color: inherit; background: none;
	border: none; border-radius: .75rem;
	overflow: clip;
	cursor: pointer;
	transition: .2s;
}

button:hover { background-color: var(--background-color); }

button::after {
	content: "";
	display: block; height: 0;
	position: absolute; inset: auto 0 0 0;
	background-color: var(--error-color);
	mix-blend-mode: lighten;
	transition: 0s;
}

:host([danger]) button:active::after {
	height: 100%;
	transition: 1s cubic-bezier(0, .3, 0, .3);
}

svg-icon {
	width: 100%; height: 100%;
}

slot {
	display: block;
	position: absolute; left: 100%;
}

</style>
