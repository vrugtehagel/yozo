<title>code-editor</title>
<meta attribute=language type=String default="js">
<meta attribute=tabsize as=tabSize type=Number default=4>
<meta property=value>
<meta method=markError>

<template mode=closed delegates-focus=true>
	<div id=container .style.tab-size="$.tabSize">
		<code-input></code-input>
		<code-preview .language="$.language" notrim></code-preview>
	</div>
</template>
<script>

const {container, codeInput, codePreview} = elements

effect(() => $.value = this.textContent.trim() + '\n')
effect(() => codePreview.textContent = $.value)
effect(() => container.style.setProperty('--width', $.width))
effect(() => container.style.setProperty('--height', $.height))

connected(() => $.$value.bind(codeInput))
connected(() => {
	when(codePreview).observes('resize').then(([entry]) => {
		$.width = entry.contentRect.width
		$.height = entry.contentRect.height
	})
})

$.markError = options => {
	codePreview.errorMessage = options?.message || ''
	codePreview.errorRow = options?.row || -1
	codePreview.errorColumn = options?.column || -1
	if(!options) return
	when(codeInput).inputs().once().then(() => $.markError())
}

</script>
<style>

:host {
	display: block; padding: 1rem 2rem;
	background: var(--background-color);
	font-family: var(--font-monospace);
	overflow: auto;
}

#container {
	width: 100%; height: 100%;
	position: relative;
}

code-input, code-preview {
	display: block; padding: 0;
	background: none;
	line-height: 1.375; font-family: inherit;
	letter-spacing: 0;
}

code-input {
	width: max(100%, var(--width) * 1px + 2rem); height: calc(100% + var(--height) * 1px);
	color: white;
	caret-color: white;
}

code-preview {
	pointer-events: none;
	position: absolute; inset: 0 auto auto 0;
	overflow: visible;
}

</style>
