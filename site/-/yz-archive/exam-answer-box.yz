<title>exam-answer-box</title>
<meta attribute=examname type=String>
<meta method=check>

<template mode=closed delegates-focus=true>
	<div id=container>
		<file-editor .src="$.src"></file-editor>
		<div id=preview></div>
		<div id=ping-lights>
			<ping-light id=pong title="Pong!"></ping-light>
			<ping-light id=ping title="Ping!"></ping-light>
		</ul>
	</div>
</template>
<script>
import('/-/js/context-messenger/index.js')
	.then(({ContextMessenger}) => $.ContextMessenger = ContextMessenger)

const {fileEditor, preview, ping, pong} = elements

$.src = ''
$.previewVisible = false
$.error = null
$.contextMessenger = null

connected(() => {
	when(preview).observes('intersection')
		.then(([{isIntersecting}]) => $.previewVisible = isIntersecting)
	when(fileEditor).fileupdates().then(() => {
		$.error = null
		$.contextMessenger?.send('reload')
	})
})

effect(async () => {
	if(!$.ContextMessenger) return
	if(!$.previewVisible){
		const iframe = elements('iframe')
		if(!iframe) return
		iframe.src = 'about:blank'
		return iframe.remove()
	}
	const iframe = document.createElement('iframe')
	iframe.src = `/tour/exam/index.html?examname=${$.examname}`
	preview.append(iframe)
	await when(iframe).loads().once()
	$.contextMessenger = $.ContextMessenger.get(iframe.contentWindow)
})

effect(() => {
	if(!$.contextMessenger) return
	when($.contextMessenger).resizes().then(event => {
		const {width} = event.detail.payload
		preview.style.setProperty('--iframe-internal-width', width)
	})
	when($.contextMessenger).pings().then(() => ping.trigger())
	when($.contextMessenger).pongs().then(() => pong.trigger())
	when($.contextMessenger).srcreveals()
		.then(event => $.src = event.detail.payload.src)
	when($.contextMessenger).answererrors()
		.then(event => $.error ??= event.detail.payload)
	when($.contextMessenger).interacts().or(when(fileEditor).idles())
		.then(() => fileEditor.markError($.error))
})

$.check = async () => {
	if(!$.contextMessenger) throw Error('ContextMessenger not found.')
	return await $.contextMessenger.send('check')
}

</script>
<style>
:host {
	display: block; height: 300px;
}

#container {
	width: 100%; height: 100%;
	position: relative;
}

code-editor {
	width: 100%; height: 100%;
}

#ping { color: var(--keyword-color); }
#pong { color: var(--name-color); }

#preview, #ping-lights {
	--iframe-internal-width: 0;
	display: flex; padding: 1rem;
	gap: 1rem;
	position: absolute; inset: auto auto 0 auto;
	background-color: var(--sub-background-color);
}

#ping-lights {
	right: 0;
	border-radius: 1rem 0 0 0;
}

#preview {
	width: min(var(--iframe-internal-width) * 1px, 100% - 9rem); height: 2.5rem;
	left: 0;
	border-radius: 0 1rem 0 0;
	opacity: clamp(0, var(--iframe-internal-width), 1);
}

iframe {
	display: block; width: 100%; height: 100%;
	border: none;
}
</style>
