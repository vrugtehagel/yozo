// Yozo helpers are in scope
const { live } = self.yozo;

// a live variable __name__ gets created with value __value__
const __name__ = live(__value__);

// a symbol is created
const symbol = Symbol();

// __left__ is equal to __right__
__left__ == __right__


// TEST: live.get() with one argument unwraps
// Given Yozo helpers are in scope
// and a live variable $ gets created with value { foo: 23 }
// Verify live.get($.$foo) is equal to 23

// TEST: live.get() with a non-live argument returns the argument
// Given Yozo helpers are in scope
// Verify live.get(null) is equal to null
// and live.get(23) is equal to 23
// and live.get(self) is equal to self

// TEST: live.get() with a key argument returns the value at that key
// Given Yozo helpers are in scope
// and a live variable $ gets created with value { foo: 23 }
// Verify live.get($, 'foo') is equal to 23
// and live.get($, '$foo') is equal to undefined

// TEST: live.get() works with keys starting with a dollar symbol
// Given Yozo helpers are in scope
// and a live variable $ gets created with value { $bar: 'baz' }
// Verify live.get($, 'bar') is equal to undefined
// and live.get($, '$bar') is equal to 'baz'

// TEST: live.get() with a key argument returns the value at that non-live key
// Given Yozo helpers are in scope
// Verify live.get(self.yozo, 'live') is equal to live

// TEST: live.get() with a symbol argument works too
// Given Yozo helpers are in scope
// and a symbol is created
// and a live variable $ gets created with value { [symbol]: 7 }
// Verify live.get($, symbol) is equal to 7

// TEST: live.get() in iterations
// Given Yozo helpers are in scope
// and a live variable $ gets created with value [ 23, 5, -1 ]
// Verify live.get([...$][0]) is equal to 23
// and [...$][0] is equal to $.$0
