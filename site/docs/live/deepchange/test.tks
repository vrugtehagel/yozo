// Yozo helpers are in scope
const { live } = self.yozo;

// a live variable __live__ gets created with value __value__
const __live__ = live(__value__);

// the live variable __live__ gets set to __value__
live.set(__live__, __value__);

// __live__ gets set to __value__
__live__ = __value__;

// __live__ gets deleted
delete __live__;

// a __event__ event listener gets attached to __live__
let __event__s = 0;
__live__.addEventListener('__event__', () => __event__s++);

// the __event__ event was fired __amount__ times
__event__s == __amount__


// TEST: The deepchange event fires on a changed variable itself
// Given Yozo helpers are in scope
// And a live variable $ gets created with value { foo: { bar: 23 } }
// And a deepchange event listener gets attached to $.$foo
// When $.foo gets set to null
// Then the deepchange event was fired 1 times
// When the live variable $ gets set to { foo: 23 }
// Then the deepchange event was fired 2 times

// TEST: The deepchange event fires when nested properties change
// Given Yozo helpers are in scope
// And a live variable $ gets created with value { foo: { bar: 23 } }
// And a deepchange event listener gets attached to $
// When $.$foo.bar gets set to 44
// Then the deepchange event was fired 1 times
// When $.foo gets set to { bar: 23 }
// Then the deepchange event was fired 2 times

// TEST: The deepchange event doesn't fire when nothing changes
// Given Yozo helpers are in scope
// And a live variable $ gets created with value { foo: { bar: 23 } }
// And a deepchange event listener gets attached to $.$foo.$bar
// And $.$foo.bar gets set to 23
// And $.foo gets set to { bar: 23, baz: 'qux' }
// And the live variable $ gets set to { foo: { bar: 23 } }
// Verify the deepchange event was fired 0 times

