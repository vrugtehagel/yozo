// a live variable __name__ gets created with value __value__
const __name__ = yozo.live(__value__);

// listeners are attached to __live__
let changes = 0, keychanges = 0, deepchanges = 0;
__live__.addEventListener('change', () => changes++);
__live__.addEventListener('keychange', () => keychanges++);
__live__.addEventListener('deepchange', () => deepchanges++);

// __live__ gets set to __value__
__live__ = __value__;

// __live__ gets deleted
delete __live__;

// __left__ is equal to __right__
__left__ == __right__

// the __event__ event was not fired
__event__s == 0

// the __event__ event was fired once
__event__s == 1


// TEST: modifying a live variable dispatches the right events
// Given a live variable $ gets created with value {foo: 23}
// and listeners are attached to $.$foo
// When $.foo gets set to 24
// Then the change event was fired once
// and the deepchange event was fired once
// Verify the keychange event was not fired

// TEST: modifying a live variable's child key fires the right events
// Given a live variable $ gets created with value {foo: {bar: 23}}
// and listeners are attached to $.$foo
// When $.$foo.bar gets set to 24
// Then the deepchange event was fired once
// Verify the change event was not fired
// and the keychange event was not fired

// TEST: removing a live variable's child key fires the right events
// Given a live variable $ gets created with value {foo: {bar: 23}}
// and listeners are attached to $.$foo
// When $.$foo.bar gets deleted
// Then the deepchange event was fired once
// and the keychange event was fired once
// Verify the change event was not fired

// TEST: adding a child key to a live variable fires the right events
// Given a live variable $ gets created with value {foo: {}}
// and listeners are attached to $.$foo
// When $.$foo.bar gets set to 23
// Then the deepchange event was fired once
// and the keychange event was fired once
// Verify the change event was not fired

// TEST: deleting a live variable fires the right events
// Given a live variable $ gets created with value {foo: 23}
// and listeners are attached to $.$foo
// When $.foo gets deleted
// Then the deepchange event was fired once
// and the change event was fired once
// Verify the keychange event was not fired

// TEST: deleting a live variable's parent fires the right events
// Given a live variable $ gets created with value {foo: {bar: 23}}
// and listeners are attached to $.$foo.$bar
// When $.foo gets deleted
// Then the deepchange event was fired once
// and the change event was fired once
// Verify the keychange event was not fired

// TEST: modifying a live variable's parent fires the right events
// Given a live variable $ gets created with value {foo: {bar: 23}}
// and listeners are attached to $.$foo.$bar
// When $.foo gets set to {bar: 24}
// Then the deepchange event was fired once
// and the change event was fired once
// Verify the keychange event was not fired

// TEST: setting a live variable to itself fires the right events
// Given a live variable $ gets created with value {foo: 23}
// and listeners are attached to $.$foo
// When $.foo gets set to 23
// Verify the change event was not fired
// and the keychange event was not fired
// and the deepchange event was not fired

// TEST: setting a live variable to another unwraps the other variable
// Given a live variable $ gets created with value {foo: 23}
// and a live variable $number gets created with value 24
// and listeners are attached to $.$foo
// When $.foo gets set to $number
// Then $.foo is equal to 24
// and the change event was fired once

// TEST: creating a live variable from another unwraps the other
// Given a live variable $ gets created with value {foo: 23}
// and a live variable $number gets created with value $.$foo
// Verify yozo.live.get($number) is equal to 23
