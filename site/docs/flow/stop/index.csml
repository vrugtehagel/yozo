@script
	export const layout = 'docs'
	export const title = 'flow.stop()'
	export const description = 'The ``flow.stop()`` method stops a flow immediately. Its cleanup callbacks are run, and the flow is prevented from ever triggering again.'

ui-callout[type=info]
	p **Note:** Some other methods, specifically [``flow.once()``](/docs/flow/once/) and [``flow.until()``](/docs/flow/until/), are more ergonomic ways of stopping a flow for their respective use-cases. They call ``flow.stop()`` implicitly, and often times make it unnecessary to store a reference to the ``flow`` in question.

p This method does not interact with the flow pipeline; when called, it stops the flow immediately. After calling it once, doing so again has no effect.

h2 Syntax

ui-code
	flow.stop();

h3 Parameters
p This method does not accept parameters.

h3 Return value
p The same [``Flow``](/docs/flow/) object the method was called on.


h2 Examples

h3 Stop auto-registration

p It is possible to automatically discover and register custom elements on the page with [``register.auto()``](/docs/register/auto/). This method returns a ``Flow``, which can be stopped to avoid further continuous scanning of a document. Although we can use ``.until()`` for this purpose, we may also store a reference to the flow and use it to manually call ``.stop()`` on it later, like so:

ui-code
	const autoRegistrationFlow = register.auto(name => {
		const url = resolveComponentURL(name);
		return url;
	});

	// Laterâ€¦
	autoRegistrationFlow.stop();

h2 Usage notes

p Once a flow has been stopped, all references to pipeline callbacks are removed, and no more can be added. Additionally, cleanup callbacks are run synchronously as soon as a flow stops. When a cleanup callback is added after a flow has been stopped, that cleanup callback fires immediately.

p A stopped flow is essentially useless, because it can no longer trigger; not even by manually calling [``flow.now()``](/docs/flow/now/). As such, it is not advised to retain references to flows after they have been stopped.

h2 See also

ul
	li [``flow.until()``](/docs/flow/until/)
	li [``flow.once()``](/docs/flow/once/)
