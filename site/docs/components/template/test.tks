// we're in a browser
if(self.Deno) return;

// a component is defined without shadow root
const name = `my-component-${ crypto.randomUUID() }`;
const source = `
	<title>${ name }</title>
	<meta attribute="message" type="string">
	<template>
		<span>{{ $.message }}</span>
	</template>
`;

// a component is defined with __mode__ shadow root
const name = `my-component-${ crypto.randomUUID() }`;
const source = `
	<title>${ name }</title>
	<meta attribute="message" type="string">
	<template mode="__mode__">
		<span>{{ $.message }}</span>
	</template>
`;

// a component is defined with additional shadow options
const name = `my-component-${ crypto.randomUUID() }`;
const source = `
	<title>${ name }</title>
	<meta attribute="message" type="string">
	<template mode="open" delegates-focus="true" slot-assignment="manual">
		<span>{{ $.message }}</span>
	</template>
`;

// the source is uploaded to a fake server
const webServer = await import('/-/js/web-server/index.js');
webServer.claim('/test/');
webServer.clear('/test/');
webServer.upload({
	src: `/test/${ name }.yz`,
	body: source
});

// the component is registered, created and connected
await self.yozo.register(`/test/${ name }.yz`);
const element = document.createElement(name);
document.body.append(element);

// the shadow root exists
element.shadowRoot != null

// the shadow root is null
element.shadowRoot == null

// the element has no children
element.children.length == 0

// the element has children
element.children.length > 0

// the shadow root's __option__ option is __value__
element.shadowRoot.__option__ == __value__

// TEST: Components can have open shadow roots
// Given we're in a browser
// and a component is defined with open shadow root
// and the source is uploaded to a fake server
// and the component is registered, created and connected
// Verify the shadow root exists
// and the element has no children

// TEST: Components can have closed shadow roots
// Given we're in a browser
// and a component is defined with closed shadow root
// and the source is uploaded to a fake server
// and the component is registered, created and connected
// Verify the shadow root is null
// and the element has no children

// TEST: Components can have no shadow at all
// Given we're in a browser
// and a component is defined without shadow root
// and the source is uploaded to a fake server
// and the component is registered, created and connected
// Verify the shadow root is null
// and the element has children

// TEST: The template accepts additional options for shadow roots
// Given we're in a browser
// and a component is defined with additional shadow options
// and the source is uploaded to a fake server
// and the component is registered, created and connected
// Verify the shadow root's delegatesFocus option is true
// and the shadow root's slotAssignment option is 'manual'

