<title>play-menubar-save</title>

<template>
	<icon-button
		id=save-button
		type=save
		role=menuitem
		aria-label="Open save dropdown"
		aria-haspopup=menu
		:aria-expanded="$.expanded"
		aria-controls=save-menu
	>
		<svg-icon type=pointer-small></svg-icon>
	</icon-button>
	<menu
		id=save-menu
		role=menu
		aria-labelledby=save-button
		.hidden="!$.expanded"
	>
		<li role=presentation>
			<button role=menuitem aria-disabled=true>
				Foo bar baz
				<svg-icon type=lock></svg-icon>
			</button>
		</li>
		<li role=presentation>
			<button role=menuitem>Foo bar baz</button>
		</li>
	</menu>
</template>
<script>
const {saveButton, saveMenu} = elements

$.expanded = false

connect(() => {
	when(saveButton).clicks().then(event => {
		event.stopPropagation()
		$.expanded = !$.expanded
	})
	when(document.body).clicks().then(() => $.expanded = false)
})

$.presets = [{name: 'foo', locked: true}, {name: 'bar'}, {name: 'baz'}]
effect(() => {
	saveMenu.replaceChildren(...$.presets.map((preset, index) => {
		// construct elements
	}))
})

</script>
<style>
#save-menu {
	min-width: min(90vw, 18rem);
	left: -.5rem;
}
menu[role=menubar]:has(#save-menu:not([hidden])){
	border-bottom-left-radius: 0;
}
#save-menu li {
	display: flex; padding: .75rem 1rem;
	line-height: 1.5;
	border-radius: .5rem;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
#save-menu li:not([aria-disabled=true]):hover {
	background-color: var(--sub-background-color);
	cursor: pointer;
}
#save-menu li > svg-icon {
	padding: 0; margin-left: auto;
}
#save-menu li[aria-disabled=true]{
	color: rgb(255 255 255 / 30%);
	color: var(--comment-color);
}

</style>
