<template>
    <div id=container tabindex=0>
        <div id=track part=track></div>
        <div id=thumb part=thumb></div>
    </div>
</template>
<script>
    define('yozo-switch')
    define.shadow({mode: 'closed', delegatesFocus: true})
    define.attribute('checked', {type: Boolean, as: ['checked', 'value']})
    define.form()

    define.property('form', function(){ return this[internals].form })
    define.method('toggle', function(value){
        this.checked = value ?? !this.checked
    })

    construct(function(){
        this[internals].role = 'checkbox'
        this[internals].ariaChecked = false
        when(this[attributes]('checked')).changes().then(() => {
            this[internals].setFormValue(this.checked ? 'on' : null)
            this[internals].ariaChecked = this.checked
            this.dispatchEvent(new Event('change', {bubbles: true}))
        })
    })

    connect(function(){
        when(this).clicks().then(() => this.toggle())
    })
</script>
<style>
    :host {
        display: inline-block;
        width: 2rem;
        height: 1rem;
        transition: .1s;
    }
    #container {
        max-width: 100%;
        max-height: 100%;
        aspect-ratio: 2 / 1;
        position: relative;
        inset: 50%;
        transform: translate(-50%, -50%);
        transition: inherit;
    }
    #track {
        position: absolute;
        inset: 0;
        color: silver;
        background-color: currentcolor;
        border-radius: 100vmax;
        transition: inherit;
    }
    #thumb {
        height: 75%;
        aspect-ratio: 1 / 1;
        position: absolute;
        top: 12.5%;
        left: 0;
        transform: translateX(16.67%);
        background-color: white;
        border-radius: 50%;
        transition: inherit;
    }
    :host([checked]) #track { color: royalblue; }
    :host([checked]) #thumb {
        left: 100%;
        transform: translateX(-116.67%);
    }
</style>

